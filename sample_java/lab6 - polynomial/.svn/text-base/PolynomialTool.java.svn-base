package lab6;
import nip.*;

public class PolynomialTool extends Tool{	
	private final int NUMBER_INTERVALS = 10;
	
		public String[] getEventNames() {
			String[] s = {"Graph points", "Graph lines"};
			return s;
		}
		
		public void actionNameCalled(String name) {
//			if (name == "Graph points") graphPoints();
//			else if (name == "Graph lines")graphLines();
//			else System.out.println("no match!");
		}
		
//		public void graphPoints() {
//			Image i0 = nip.getPrimarySourceImage();
//			Image i1 = nip.getTargetImage();
//			for (int x = 0; x < i0.getWidth(); x++) {
//				for (int y = 0; y < i0.getHeight(); y++) {
//					Color old = i0.getPixelColor(x, y);
//					Color newC = new Color(ImageProcessor.darker(old.getRed()),
//							ImageProcessor.darker(old.getGreen()),
//							ImageProcessor.darker(old.getBlue()));
//					i1.setPixel(x, y, newC);
//				}
//			}
//		}
//		
//		public void graphLines() {
//			Image i0 = nip.getPrimarySourceImage();
//			Image i1 = nip.getSecondarySourceImage();
//			Image i2 = nip.getTargetImage();
//			for (int x = 0; x < i0.getWidth(); x++) {
//				for (int y = 0; y < i0.getHeight(); y++) {
//					Color old0 = i0.getPixelColor(x, y);
//					Color old1 = i1.getPixelColor(x, y);
//					Color newC = new Color(ImageProcessor.combine(old0.getRed(), old1.getRed()) % 256,
//							ImageProcessor.combine(old0.getGreen(), old1.getGreen()) % 256,
//							ImageProcessor.combine(old0.getBlue(), old1.getBlue()) % 256);
//					i2.setPixel(x, y, newC);
//				}
//			}
//		}
		
		
		
		public String toString() {
			return "lab6 extension";
		}
	}


